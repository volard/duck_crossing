# Development environment

services:
  # Backend
  app-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    env_file:
      - .env
    volumes:
      - .:/app # Map local source code to /app in the container
      - go-cache:/go # Cache for Go modules
    ports:
      - "8080:8080"
    environment:
      - GO_ENV=development
      - DB_HOST=pgbouncer
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - KEYCLOAK_HOST=${KEYCLOAK_HOST}
    command: air # live reloading
    depends_on:
      # - pgbouncer
      # - keycloak

  # frontend:
  #   build:
  #     context: ./client
  #     dockerfile: Dockerfile.dev
  #   ports:
  #     - "3000:3000"
  #   volumes:
  #     - ../client:/app


  # # Database pooler service
  # pgbouncer:
  #   image: edoburu/pgbouncer
  #   env_file:
  #     - .env
  #   environment:
  #     - DB_USER=${DB_USER}
  #     - DB_PASSWORD=${DB_PASSWORD}
  #     - DB_HOST=${DB_HOST}
  #     - DB_NAME=${DB_NAME}
  #     - POOL_MODE=transaction
  #     - MAX_CLIENT_CONN=${PGBOUNCER_MAX_CLIENT_CONN}
  #     - DEFAULT_POOL_SIZE=${PGBOUNCER_DEFAULT_POOL_SIZE}
  #     - RESERVE_POOL_SIZE=${PGBOUNCER_DEFAULT_POOL_SIZE}
  #     - MAX_DB_CONNECTIONS=${PGBOUNCER_MAX_DB_CONNECTIONS}
  #     - MAX_USER_CONNECTIONS=${PGBOUNCER_MAX_USER_CONNECTIONS}
  #     - ADMIN_USER=${PGBOUNCER_ADMIN_USER}
  #     - ADMIN_PASSWORD=${PGBOUNCER_ADMIN_PASSWORD}
  #   ports:
  #     - "${PGBOUNCER_PORT}:6432"
  #   depends_on:
  #     - postgres


  # # Database service
  # postgres:
  #   image: postgres:13
  #   env_file:
  #     - .env
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   environment:
  #     - POSTGRES_PASSWORD=${DB_PASSWORD}
  #     - POSTGRES_DB=${DB_NAME}

# volumes:
#   postgres_data:
